

Shader "Unlit/Colour Magic"
{
    
    Properties
    {
        _MainTex ("Texture", 2D) = "white" {}
    }
    SubShader
    {
        Tags { "RenderType"="Opaque" }
        LOD 100

        Pass
        {
            CGPROGRAM
            #pragma vertex vert
            #pragma fragment frag
            // make fog work
            #pragma multi_compile_fog

            #include "UnityCG.cginc"
            #include "Magic.hlsl"

            struct appdata
            {
                float4 vertex : POSITION;
                float2 uv : TEXCOORD0;
            };

            struct v2f
            {
                float2 uv : TEXCOORD0;
                UNITY_FOG_COORDS(1)
                float4 vertex : SV_POSITION;
            };

            sampler2D _MainTex;
            float4 _MainTex_ST;

            v2f vert (appdata v)
            {
                v2f o;
                o.vertex = UnityObjectToClipPos(v.vertex);
                o.uv = TRANSFORM_TEX(v.uv, _MainTex);
                UNITY_TRANSFER_FOG(o,o.vertex);
                return o;
            }

            fixed4 frag (v2f i) : SV_Target
            {
                //Hard-coded data for spectral power distribution
                float d50_spd[31] =
                {
                    49.3081, 56.5128, 60.0338, 57.8175, 74.8249, 87.2472, 90.6122, 91.3681, 95.1085, 91.9627, 95.7237, 96.6133, 97.129, 102.099, 100.755, 102.317, 100, 97.735, 98.918, 93.4988, 97.6878, 99.2691, 99.0415, 95.7218, 98.8572, 95.6672, 98.1898, 103.003, 99.133, 87.3809, 91.6035
                };
                float x_spd[31] =
                {
                    0.01431, 0.04351, 0.13438, 0.2839, 0.34828, 0.3362, 0.2908, 0.19536, 0.09564, 0.03201, 0.0049, 0.0093, 0.06327, 0.1655, 0.2904, 0.4334499, 0.5945, 0.7621, 0.9163, 1.0263, 1.0622, 1.0026, 0.8544499, 0.6424, 0.4479, 0.2835, 0.1649, 0.0874, 0.04677, 0.0227, 0.01135916
                };
                float y_spd[31] =
                {
                    0.000396, 0.00121, 0.004, 0.0116, 0.023, 0.038, 0.06, 0.09098, 0.13902, 0.20802, 0.323, 0.503, 0.71, 0.862, 0.954, 0.9949501, 0.995, 0.952, 0.87, 0.757, 0.631, 0.503, 0.381, 0.265, 0.175, 0.107, 0.061, 0.032, 0.017, 0.00821, 0.004102
                };
                float z_spd[31] =
                {
                    0.06785001, 0.2074, 0.6456, 1.3856, 1.74706, 1.77211, 1.6692, 1.28764, 0.8129501, 0.46518, 0.272, 0.1582, 0.07824999, 0.04216, 0.0203, 0.008749999, 0.0039, 0.0021, 0.001650001, 0.0011, 8e-04, 0.00034, 0.00019, 4.999999e-05, 2e-05, 0, 0, 0, 0, 0, 0
                };
                
                float cob_spd[31] =
                {
                    0.1626, 0.2328, 0.2854, 0.32, 0.3402, 0.3582, 0.3582, 0.337, 0.3198, 0.3372, 0.3028, 0.1988, 0.1178, 0.0641, 0.0481, 0.0433, 0.04, 0.03814, 0.0367, 0.03658, 0.03692, 0.03716, 0.03762, 0.03802, 0.03578, 0.0329, 0.1066, 0.232, 0.3946, 0.5626, 0.6486  
                };
                float cay_spd[31] =
                {
                    0.03908, 0.04476, 0.0472, 0.05018, 0.05178, 0.05032, 0.04984, 0.05138, 0.05248, 0.053, 0.08686, 0.2348, 0.4586, 0.6514, 0.771, 0.8198, 0.8472, 0.8598, 0.8714, 0.8864, 0.8946, 0.8988, 0.8996, 0.8978, 0.8964, 0.899, 0.898, 0.8956, 0.8934, 0.8956, 0.8936
                };
                float tiw_spd[31] =
                {
                    0.4824, 0.734, 0.8548, 0.8872, 0.8988, 0.91, 0.906, 0.9028, 0.9056, 0.9048, 0.904, 0.9076, 0.914, 0.8998, 0.904, 0.9064, 0.9058, 0.905, 0.907, 0.9124, 0.914, 0.9138, 0.9118, 0.908, 0.9056, 0.9074, 0.9072, 0.9052, 0.9034, 0.9064, 0.9052  
                };
                float car_spd[31] =
                {
                    0.0379166666666667, 0.0444, 0.0462333333333333, 0.0472833333333333, 0.0477833333333333, 0.0477, 0.04785, 0.0487666666666667, 0.0493166666666667, 0.0492833333333333, 0.0493333333333333, 0.0503166666666667, 0.0515166666666667, 0.0535666666666667, 0.0546166666666667, 0.0556666666666667, 0.0571833333333333, 0.0656166666666667, 0.0966833333333333, 0.176, 0.317, 0.502666666666667, 0.661333333333333, 0.767, 0.848, 0.877166666666667, 0.874333333333333, 0.883, 0.887666666666667, 0.895166666666667, 0.893833333333333
                };
                float ivb_spd[31] =
                {
                    0.0348, 0.03912, 0.0382, 0.03666, 0.03438, 0.03404, 0.03382, 0.03354, 0.03334, 0.03308, 0.0328, 0.03266, 0.03226, 0.03258, 0.03258, 0.03216, 0.03174, 0.03212, 0.0319, 0.03186, 0.03162, 0.0313, 0.03122, 0.03126, 0.03128, 0.03174, 0.0314, 0.03158, 0.03186, 0.03206, 0.0324
                };
                float ora_spd[31] =
                {
                    0.03516, 0.0357, 0.03808, 0.04182, 0.0461, 0.04766, 0.05534, 0.07042, 0.0888, 0.09928, 0.1024, 0.1052, 0.1018, 0.09758, 0.1042, 0.1572, 0.2492, 0.3976, 0.5324, 0.6596, 0.7638, 0.837, 0.8752, 0.891, 0.9008, 0.9064, 0.9064, 0.906, 0.9058, 0.909, 0.9084  
                };
                float eng_spd[31] =
                {
                    0.0366, 0.0253, 0.0248, 0.02638, 0.03126, 0.03428, 0.03616, 0.0375, 0.04182, 0.053, 0.06666, 0.06934, 0.06066, 0.0528, 0.04486, 0.03858, 0.0335, 0.03116, 0.02998, 0.02944, 0.02898, 0.02884, 0.0294, 0.03018, 0.03146, 0.03306, 0.03232, 0.0315, 0.0305, 0.02942, 0.03006
                };
                float brg_spd[31] =
                {
                    0.03388, 0.03418, 0.03388, 0.03466, 0.03614, 0.03628, 0.04286, 0.06244, 0.1426, 0.2966, 0.4496, 0.5206, 0.4984, 0.4588, 0.3854, 0.3072, 0.2334, 0.1754, 0.1328, 0.09798, 0.0719, 0.0573, 0.05158, 0.04952, 0.04802, 0.04762, 0.05286, 0.06044, 0.06858, 0.07638, 0.08
                };
                float sma_spd[31] =
                {
                    0.1338, 0.1854, 0.224, 0.257, 0.3028, 0.3362, 0.3322, 0.297, 0.236, 0.1772, 0.1374, 0.1112, 0.09422, 0.08336, 0.07668, 0.07012, 0.06392, 0.06024, 0.0576, 0.05648, 0.05596, 0.05648, 0.05892, 0.06202, 0.06672, 0.07386, 0.08546, 0.101, 0.1194, 0.1334, 0.1398
                };
                float ziw_spd[31] =
                {
                    0.6448, 0.7592, 0.828, 0.8452, 0.8688, 0.8854, 0.884, 0.882, 0.886, 0.8856, 0.8854, 0.8898, 0.8966, 0.8828, 0.8872, 0.8898, 0.889, 0.8894, 0.8938, 0.9028, 0.9058, 0.906, 0.9034, 0.8998, 0.897, 0.8982, 0.8964, 0.8922, 0.8892, 0.8918, 0.8894
                };
                float yeo_spd[31] =
                {
                    0.03754, 0.04078, 0.04382, 0.04798, 0.05532, 0.05954, 0.0612, 0.06208, 0.06348, 0.0663, 0.07138, 0.0819, 0.10026, 0.1206, 0.1502, 0.1878, 0.228, 0.269, 0.292, 0.3078, 0.312, 0.3086, 0.3042, 0.3008, 0.2976, 0.2984, 0.3014, 0.308, 0.3174, 0.3262, 0.3296
                };
                float cop_spd[31] =
                {
                    0.1134, 0.1518, 0.1532, 0.1438, 0.1226, 0.1148, 0.109, 0.1074, 0.1074, 0.1086, 0.11, 0.1142, 0.1196, 0.1262, 0.136, 0.1574, 0.1892, 0.2444, 0.2996, 0.3546, 0.3978, 0.4284, 0.449, 0.4618, 0.473, 0.483, 0.49, 0.5016, 0.5142, 0.526, 0.5294  
                };

                float yel_spd[31] = 
                {
                    0.04089892284,0.04680592266,0.04861080722,0.05084533244,0.0504413791,0.04781331346,0.04677147048,0.04798937588,0.0487355277,0.05028786734,0.08685709088,0.231999448,0.4489595352,0.6375858902,0.7618325232,0.8141510964,0.8418756486,0.8523550748,0.8606807948,0.8723337294,0.8779150248,0.8795809866,0.8782853246,0.8758408666,0.874917984,0.876736319,0.8739156128,0.8690138576,0.864857948,0.8644188166,0.8647602676
                };
                float cog_spd[31] = 
                {
                    0.1187611608,0.1614576104,0.1876114398,0.2067245216,0.2291470586,0.2518368036,0.2740347208,0.2964443684,0.3186492922,0.3409070014,0.3639210642,0.3942864536,0.397068411,0.3879255056,0.339718914,0.2789183736,0.2184333384,0.1701419506,0.1442047834,0.1308941528,0.1184235096,0.106280288,0.10170369766,0.10206994862,0.10398675954,0.10220242732,0.09735145416,0.0992840887,0.1141401186,0.1182027428,0.1201593206
                };
                float lem_spd[31] = 
                {
                    0.02910050526,0.03633466548,0.03897989912,0.04176949188,0.04183596896,0.03932791724,0.04094898404,0.0491110757,0.09169554858,0.1877359332,0.3419744134,0.544159913,0.6946384548,0.7864208936,0.8160222052,0.828685367,0.836937308,0.844383228,0.8530824542,0.865181768,0.871192968,0.8732881188,0.8723142862,0.8699595214,0.8687766192,0.8701449632,0.8676537394,0.864306009,0.8622079252,0.8639489294,0.8638904572
                };
                float tur_spd[31] = 
                {
                    0.1067531002,0.142808613,0.1899427952,0.234349334,0.3056621072,0.3661291422,0.4214275538,0.4665391146,0.493988812,0.4893173396,0.4740232944,0.5102436066,0.510512626,0.4827194508,0.3847463014,0.2854888856,0.1986847938,0.139082539,0.1115697012,0.09893664708,0.08864088952,0.07858171314,0.07446618078,0.07428440602,0.07525925188,0.0741889298,0.0703093484,0.07021637562,0.07772162112,0.07694886624,0.06480867118
                };
                float mag_spd[31] = 
                {
                    0.1409891694,0.1988490582,0.2070852368,0.2021906792,0.176362175,0.157821718,0.1309862838,0.10640123486,0.08494718374,0.06737037746,0.05726600064,0.04909689574,0.04165195972,0.03701035754,0.03630357312,0.03638869224,0.03619160206,0.03863534032,0.05193579794,0.0914713949,0.1534947724,0.20045107,0.2248467296,0.2438227504,0.2868280828,0.3765884162,0.481879711,0.5772065996,0.6429341674,0.6949858786,0.7013311624
                };
                float lab_spd[31] = 
                {
                    0.03296161966,0.03962595908,0.03875627072,0.03602077064,0.0315753728,0.03029667888,0.02974998316,0.02933342306,0.0289005231,0.0285583969,0.02825484388,0.02799374946,0.02750892042,0.02767304964,0.02758406624,0.02709841692,0.02662929522,0.02693402246,0.02677281946,0.02673871776,0.02655732968,0.0263008181,0.02624001018,0.02619204968,0.02609850058,0.02645547838,0.02632224854,0.0265194621,0.02674307858,0.02693516762,0.02740628086
                };

                float nul_spd[31] = 
                {
                    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                };
                
                SPD d50_2d;
                d50_2d.r = d50_spd;
                
                SPD d50_x, d50_y, d50_z;
                d50_x.r = x_spd;
                d50_y.r = y_spd;
                d50_z.r = z_spd;
                
                //Number of available colours 
                #define TOTAL_COL 20
                SPD colour[TOTAL_COL];

                colour[0].r = cob_spd; //Cobalt Blue
                colour[1].r = cay_spd; //Cadmium Yellow
                colour[2].r = tiw_spd; //Titanium White
                colour[3].r = car_spd; //Cadimium Red
                colour[4].r = ivb_spd; //Ivory Black
                colour[5].r = ora_spd; //Orange
                colour[6].r = eng_spd; //English Green
                colour[7].r = brg_spd; //Bright Green
                colour[8].r = sma_spd; //Smalt Blue 
                colour[9].r = ziw_spd; //Zinc White
                colour[10].r = yeo_spd; //Yellow Orchid
                colour[11].r = cop_spd; //Copper 
                colour[12].r = yel_spd; //Yellow
                colour[13].r = cog_spd; //Cobalt Green
                colour[14].r = lem_spd; //Lemon
                colour[15].r = tur_spd; //Cobalt Turquoise Light
                colour[16].r = mag_spd; //Magenta
                colour[17].r = lab_spd; //Lamb Black
                
                MIX mix;
                //Numbers of colour in the blending recipe 
                mix.ncol = 2;
                
                for (int a = 0; a < TOTAL_COL; a++)
                {
                    mix.spd[a].r = nul_spd;
                    mix.con[a] = 0.0f;
                }

                //Colours to blend
                mix.spd[0] = colour[13];
                mix.spd[1] = colour[14];
                //Concentration/ratio of the colours to blend
                mix.con[0] = i.uv.x;
                mix.con[1] = 1 - mix.con[0];
                //Realistic colour blending
                #define COLOUR
                //Linear colour blending
                //#define LINEAR
                #ifdef COLOUR
                    SPD mixed = col_mix(mix);
                #endif
                #ifdef LINEAR
                    SPD mixed = lin_mix(mix);
                #endif
                return float4(rgb2srgb(xyz2rgb(spd2xyz(mixed, d50_2d, d50_x, d50_y, d50_z))), 1.0);
            }

            ENDCG
        }
    }
}
